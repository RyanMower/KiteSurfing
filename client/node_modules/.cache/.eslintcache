[{"/home/ryanmower/Development/KiteSurfing/client/src/index.js":"1","/home/ryanmower/Development/KiteSurfing/client/src/Services/reportWebVitals.js":"2","/home/ryanmower/Development/KiteSurfing/client/src/Components/App/App.js":"3","/home/ryanmower/Development/KiteSurfing/client/src/Components/SurfingLessons/SurfingLessons.js":"4","/home/ryanmower/Development/KiteSurfing/client/src/Components/Navbar/Navbar.js":"5","/home/ryanmower/Development/KiteSurfing/client/src/Components/Home/Home.js":"6","/home/ryanmower/Development/KiteSurfing/client/src/Components/SurfingLocations/SurfingLocations.js":"7","/home/ryanmower/Development/KiteSurfing/client/src/Components/Profile/Profile.js":"8","/home/ryanmower/Development/KiteSurfing/client/src/Components/Login/Login.js":"9"},{"size":573,"mtime":1657766793968,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1657765670434,"results":"12","hashOfConfig":"11"},{"size":1240,"mtime":1658196365103,"results":"13","hashOfConfig":"11"},{"size":153,"mtime":1657836514651,"results":"14","hashOfConfig":"11"},{"size":1234,"mtime":1658191372587,"results":"15","hashOfConfig":"11"},{"size":121,"mtime":1657826504967,"results":"16","hashOfConfig":"11"},{"size":158,"mtime":1657836551471,"results":"17","hashOfConfig":"11"},{"size":3478,"mtime":1658286155744,"results":"18","hashOfConfig":"11"},{"size":1936,"mtime":1657903420000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"191y37e",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"/home/ryanmower/Development/KiteSurfing/client/src/index.js",[],[],[],"/home/ryanmower/Development/KiteSurfing/client/src/Services/reportWebVitals.js",[],[],"/home/ryanmower/Development/KiteSurfing/client/src/Components/App/App.js",["51"],[],"import '../../Assets/Styles/App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from '../Navbar/Navbar';\nimport Home from '../Home/Home';\nimport SurfingLocations from '../SurfingLocations/SurfingLocations';\nimport SurfingLessons from '../SurfingLessons/SurfingLessons';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n\nfunction App() {\n  \n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <Router> \n      <div className=\"App\">\n        <Navbar isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>\n        <Routes>\n          <Route path=\"/\" exact element={<Home/>} />\n          <Route path=\"/home\" exact element={<Home/>} />\n          <Route path=\"/SurfingLocations\" exact element={<SurfingLocations/>} />\n          <Route path=\"/SurfingLessons\" exact element={<SurfingLessons/>} />\n          <Route path=\"/login\" exact element={<Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />} />\n          <Route path=\"/profile\" exact element={<Profile isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn}/>} /> \n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/ryanmower/Development/KiteSurfing/client/src/Components/SurfingLessons/SurfingLessons.js",[],[],"/home/ryanmower/Development/KiteSurfing/client/src/Components/Navbar/Navbar.js",["52","53"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar(props) {\n  const navStyle = {\n    color: 'black'\n  };\n\n  let LoggedInUser = {\n    user: \"\",\n    email: \"\"\n  };\n\n\n  const [loginProfile, setLoggedInProfile] = useState();\n \n  useEffect(() => {\n    if (props.isLoggedIn){\n      fetch(\"/getLoggedInUser\")\n        .then(resp => resp.json())\n        .then(data => {\n          LoggedInUser = data;\n          setLoggedInProfile(<Link style={navStyle} to=\"/profile\"><li> Hello, {LoggedInUser[\"user\"]}</li></Link>);\n        })\n        .catch(err => console.log(err));\n\n    }\n    else{\n      setLoggedInProfile(<Link style={navStyle} to=\"/login\"><li> Login </li></Link>);\n    }\n  \n  }, [props.isLoggedIn]);\n\n  return (\n    <div className=\"Navbar\">\n      <h3> LOGO </h3>\n      <ul className=\"nav-links\" >\n        <Link style={navStyle} to=\"/\">\n          <li> Home </li>\n        </Link>\n        <Link style={navStyle} to=\"/SurfingLessons\">\n          <li> Surfing Lessons</li>\n        </Link>\n        <Link style={navStyle} to=\"/SurfingLocations\">\n          <li> Surfing Locations</li>\n        </Link>\n        {loginProfile}\n\n      </ul>\n    </div>\n  );\n}\n\nexport default Navbar;\n","/home/ryanmower/Development/KiteSurfing/client/src/Components/Home/Home.js",[],[],"/home/ryanmower/Development/KiteSurfing/client/src/Components/SurfingLocations/SurfingLocations.js",[],[],"/home/ryanmower/Development/KiteSurfing/client/src/Components/Profile/Profile.js",["54","55"],[],"/home/ryanmower/Development/KiteSurfing/client/src/Components/Login/Login.js",["56"],[],"import React, { useState, useEffect } from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport \"../../Assets/Styles/Login.css\";\n\nfunction Login(props) {\n\n  // React States\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const errors = {\n    credentials: \"Invalid Credentials\",\n  };\n\n  const renderErrorMessage = (type) => {\n    return (<div className=\"error\">{errors[type]}</div>);\n  }\n\n\n\n  const handleSubmit = (event) => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { email, password} = document.forms[0];\n\n    let data = JSON.stringify({email: email.value, password: password.value});\n\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {'Content-Type': 'application/json'},\n      body: data,\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if(data.status === \"success\"){\n          props.setIsLoggedIn(true);\n        }else{\n          setIsSubmitted(true);\n        }})\n      .catch(err => console.log(err));\n  };\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Email</label>\n          <input type=\"text\" name=\"email\" required />\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"password\" required />\n        </div>\n        <div>{isSubmitted && renderErrorMessage(\"credentials\")}</div>\n        <div className=\"button-container\">\n          <input type=\"submit\" value=\"Submit\"/>\n        </div>\n      </form>\n    </div>\n  );\n  \n\n\n  let display;\n\n  if(props.isLoggedIn){\n    display = <Navigate to=\"/\" /> \n  }\n  else{\n    display = \n      <div className=\"Login\">\n        <div className=\"login-form\">\n          <div className=\"title\">Sign In</div>\n            {renderForm}\n        </div>\n      </div>\n  }\n\n  return (\n    display\n  );\n}\n\nexport default Login;\n",{"ruleId":"57","severity":1,"message":"58","line":2,"column":27,"nodeType":"59","messageId":"60","endLine":2,"endColumn":36},{"ruleId":"57","severity":1,"message":"61","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":44},{"ruleId":"62","severity":1,"message":"63","line":22,"column":26,"nodeType":"59","endLine":22,"endColumn":30},{"ruleId":"57","severity":1,"message":"64","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"65","line":9,"column":16,"nodeType":"59","messageId":"60","endLine":9,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'LoggedInUser' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used."]